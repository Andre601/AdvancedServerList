name: Comment on Pull request

on:
  workflow_run:
    types:
      - completed
    workflows:
      - 'Create PR Artifacts'

permissions:
  issues: write
  pull-requests: write

jobs:
  comment:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Get Artifact and Pull request info
        env:
          GITHUB_TOKEN: ${{ github.token }} # Needs to be set as env variable so that 'gh api' can be used.
          WORKFLOW_RUN_EVENT_OBJ: ${{ toJSON(github.event.workflow_run) }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
        run: |
          PREVIOUS_JOB_ID=$(jq -r '.id' <<< "$WORKFLOW_RUN_EVENT_OBJ")
          echo "Previous Job ID: $PREVIOUS_JOB_ID"
          echo "PREVIOUS_JOB_ID=$PREVIOUS_JOB_ID" >> "$GITHUB_ENV"
          
          SUITE_ID=$(jq -r '.check_suite_id' <<< "$WORKFLOW_RUN_EVENT_OBJ")
          echo "Previous Suite ID: $SUITE_ID"
          echo "SUITE_ID=$SUITE_ID" >> "$GITHUB_ENV"
          
          ARTIFACT_ID=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
            --jq ".artifacts.[] |
            select(.workflow_run_id==${PREVIOUS_JOB_ID}) |
            select(.expired==false) |
            .id")
          
          echo "Artifact ID: $ARTIFACT_ID"
          echo "ARTIFACT_ID=$ARTIFACT_ID" >> "$GITHUB_ENV"
          
          ARTIFACT_EXPIRE_DATE=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
            --jq ".artifacts.[] |
            select(.workflow_run_id==${PREVIOUS_JOB_ID}) |
            select(.expired==false) |
            .expires_at")
          
          echo "Artifact Expire Date: $ARTIFACT_EXPIRE_DATE"
          echo "ARTIFACT_EXPIRE_DATE=$ARTIFACT_EXPIRE_DATE" >> "$GITHUB_ENV"
          
          PR_NUMBER=$(jq -r '.pull_requests[0].number' \
            <<< "$WORKFLOW_RUN_EVENT_OBJ")
          
          echo "Pull request Number: $PR_NUMBER"
          echo "PR_NUMBER=$PR_NUMBER" >> "$GITHUB_ENV"
          
          HEAD_SHA=$(jq -r '.pull_requests[0].head.sha' \
            <<< "$WORKFLOW_RUN_EVENT_OBJ")
          
          echo "Head SHA: $HEAD_SHA"
          echo "HEAD_SHA=$HEAD_SHA" >> "$GITHUB_ENV"
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ env.PR_NUMBER }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- pr-build comment -->'
      - name: Print Comment info
        run: |
          echo "Comment ID: ${{ steps.find-comment.outputs.comment-id }}"
          echo "Comment Author: ${{ steps.find-comment.outputs.comment-author }}"
          echo "Comment created at: ${{ steps.find-comment.outputs.comment-created-at }}"
      - name: Render Markdown Template
        id: render
        uses: chuhlomin/render-template:funcs@1f41b8ed07508ba92b8501e7105c8c9632c73fc9
        env:
          JOB_PATH: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ env.PREVIOUS_JOB_ID }}"
          ARTIFACT_URL: "${{ github.server_url }}/${{ github.repository }}/suites/${{ env.SUITE_ID }}/artifacts/${{ env.ARTIFACT_ID }}"
          ARTIFACT_EXPIRE_DATE: "${{ env.ARTIFACT_EXPIRE_DATE }}"
          HEAD_SHA: "${{ env.HEAD_SHA }}"
        with:
          template: './.github/assets/pr-comments/success.md'
          vars: |
            commit: ${{ env.HEAD_SHA }}
            logs: ${{ env.JOB_PATH }}
            download: ${{ env.ARTIFACT_URL }}
            expire: ${{ env.ARTIFACT_EXPIRE_DATE }}
      - name: Update Comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ env.PR_NUMBER }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
          body: ${{ steps.render.outputs.result }}
