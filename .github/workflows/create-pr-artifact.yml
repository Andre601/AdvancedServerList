name: Create PR Artifacts

on:
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - master
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'
      - 'mkdocs.yml'
      - 'requirements.txt'

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref }}'
  cancel-in-progress: false

permissions:
  issues: write
  pull-requests: write

jobs:
  buildArtifacts:
    runs-on: ubuntu-latest
    outputs:
      comment_id: ${{ steps.comment.outputs.comment-id }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ github.event.pull_request.number }}/merge
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- pr-build comment -->'
      - name: Print Comment info
        run: |
          echo "Comment ID: ${{ steps.find-comment.outputs.comment-id }}"
          echo "Comment Author: ${{ steps.find-comment.outputs.comment-author }}"
          echo "Comment created at: ${{ steps.find-comment.outputs.comment-created-at }}"
      - name: Post/Update Comment
        uses: peter-evans/create-or-update-comment@v3
        id: comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
          body-path: .github/assets/pr-comments/building.md
      - name: Set up JDK 1.16
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '16'
          cache: 'maven'
      - name: Obtain short Commit SHA
        id: get-commit
        run: 'echo "sha_short=$(git rev-parse --short ${{ github.event.pull_request.head.sha }})" >> $GITHUB_OUTPUT'
      - name: Build Jar files
        run: mvn clean install
        env:
          COMMIT_SHA: ${{ steps.get-commit.outputs.sha_short }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: AdvancedServerList-Artifacts
          path: '*/target/AdvancedServerList-*.jar'
          if-no-files-found: error
  commentOnFail:
    needs: [buildArtifacts]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Render Markdown Template
        id: render
        uses: chuhlomin/render-template@v1f41b8ed07508ba92b8501e7105c8c9632c73fc9
        with:
          template: './.github/assets/pr-comments/failed.md'
          vars: |
            commit: ${{ github.event.pull_request.head.sha }}
            logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: Update Comment (Failure)
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ needs.buildArtifacts.outputs.comment_id }}
          edit-mode: replace
          body: ${{ steps.render.outputs.result }}
