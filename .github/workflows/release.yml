#
# Big thank you to @Kir-Antipov for providing this workflow file.
# Check out his mc-publish action here: https://github.com/Kir-Antipov/mc-publish
#

name: Publish Assets

on:
  release:
    types: [published]

jobs:
  buildJars:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 1.16
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '16'
        cache: 'maven'
    - name: Build Jar files
      run: mvn clean install
    - name: Save BungeeCord Jar file
      uses: actions/upload-artifact@v3
      with:
        name: asl-bungeecord
        path: bungeecord/target/AdvancedServerList-*.jar
        if-no-files-found: error
        retention-days: 1
    - name: Save Paper Jar file
      uses: actions/upload-artifact@v3
      with:
        name: asl-paper
        path: paper/target/AdvancedServerList-*.jar
        if-no-files-found: error
        retention-days: 1
    - name: Save Spigot Jar file
      uses: actions/upload-artifact@v3
      with:
        name: asl-spigot
        path: spigot/target/AdvancedServerList-*.jar
        if-no-files-found: error
        retention-days: 1
    - name: Save Velocity Jar file
      uses: actions/upload-artifact@v3
      with:
        name: asl-velocity
        path: velocity/target/AdvancedServerList-*.jar
        if-no-files-found: error
        retention-days: 1
  publish:
    needs: [buildJars]
    strategy:
      matrix:
        include:
          - directory: bungeecord
            loaders: |
              bungeecord
              waterfall
          - directory: paper
            loaders: paper
          - directory: spigot
            loaders: spigot
          - directory: velocity
            loaders: velocity
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Get Jar files
      uses: actions/download-artifact@v3
      with:
        name: asl-${{ matrix.directory }}
        path: ${{ matrix.directory }}/target
    - name: Get Version
      id: github-release
      run: |
        version=$(echo ${{ github.event.release.tag_name }} | cut -d'v' -f2)
        echo "::set-output name=version::$version"
    - name: Upload AdvancedServerList (${{ matrix.loaders }}) to GitHub and Modrinth
      uses: Kir-Antipov/mc-publish@v3.2
      with:
        name: ${{ github.event.release.name }}
        version: ${{ steps.github-release.outputs.version }}
        version-type: release
        files: ${{ matrix.directory}}/target/AdvancedServerList-*.jar
        files-secondary: ""
        loaders: ${{ matrix.loaders }}
        version-resolver: releases
        game-versions: '1.19'
        java: 16
        modrinth-id: xss83sOY
        modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
