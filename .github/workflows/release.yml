#
# Big thank you to @Kir-Antipov for providing this workflow file.
# Check out his mc-publish action here: https://github.com/Kir-Antipov/mc-publish
#

name: Publish Assets

on:
  release:
    types:
    - published

jobs:
  buildJars:
    runs-on: ubuntu-latest
    outputs:
      plugin_release: ${{ steps.github-release.outputs.PLUGIN_RELEASE }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Get Version from Release
      id: github-release
      run: |
        version=$(echo ${{ github.event.release.tag_name }} | cut -d'v' -f2)
        echo "PLUGIN_RELEASE=$version" >> $GITHUB_OUTPUT
    - name: Set up JDK 1.16
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '16'
        cache: 'maven'
    - name: Build Jar files
      run: mvn clean install
    - name: Save All files
      uses: actions/upload-artifact@v3
      with:
        name: asl-files
        path: |
          */target/AdvancedServerList-*.jar
          hangar-uploader/target/HangarUploader.jar
        if-no-files-found: error
        retention-days: 1
  publish:
    needs: [buildJars]
    strategy:
      matrix:
        include:
          - platforms: BungeeCord, Waterfall
            directory: bungeecord
            loaders: |
              bungeecord
              waterfall
          - platforms: Spigot, Paper
            directory: bukkit
            loaders: |
              spigot
              paper
          - platforms: Velocity
            directory: velocity
            loaders: velocity
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Get Jar files
      uses: actions/download-artifact@v3
      with:
        name: asl-files
    - name: Upload AdvancedServerList v${{ needs.buildJars.outputs.plugin_release }} (${{ matrix.loaders }}) to GitHub and Modrinth
      if: '!github.event.release.prerelease'
      uses: Kir-Antipov/mc-publish@v3.3
      with:
        name: ${{ github.event.release.tag_name }} (${{ matrix.platforms }})
        version: ${{ needs.buildJars.outputs.plugin_release }}
        version-type: release
        files: ${{ matrix.directory}}/target/AdvancedServerList-*.jar
        loaders: ${{ matrix.loaders }}
        game-version-filter: releases
        game-versions: '>=1.19'
        java: 16
        modrinth-id: xss83sOY
        modrinth-featured: false
        modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload AdvancedServerList v${{ needs.buildJars.outputs.plugin_release }} (${{ matrix.loaders }}) to GitHub and Modrinth [Pre-Release]
      if: 'github.event.release.prerelease'
      uses: Kir-Antipov/mc-publish@v3.3
      with:
        name: ${{ github.event.release.tag_name }} (${{ matrix.platforms }})
        version: ${{ needs.buildJars.outputs.plugin_release }}
        version-type: beta
        files: ${{ matrix.directory }}/target/AdvancedServerList-*.jar
        loaders: ${{ matrix.loaders }}
        game-version-filter: releases
        game-versions: '>=1.19'
        java: 16
        modrinth-id: xss83sOY
        modrinth-featured: false
        modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
  publishHangar:
    needs: [buildJars]
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 1.16
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '16'
      - name: Download Release Assets
        uses: actions/download-artifact@v3
        with:
          name: asl-files
      - name: Move HangarUploader.jar
        working-directory: hangar-uploader/target/
        run: mv HangarUploader.jar ../../
      - name: Execute HangarUploader.jar
        run: java -jar HangarUploader.jar ${{ secrets.HANGAR_TOKEN }} ${{ needs.buildJars.outputs.plugin_release }} ${{ github.event.release.prerelease }}
        env:
          GITHUB_RELEASE_BODY: ${{ github.event.release.body }}
